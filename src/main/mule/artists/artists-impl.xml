<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
	<sub-flow name="impl-get-artists" doc:id="19434f60-fa56-45b1-bb52-30415497eebb" >
		<logger level="INFO" doc:name="INFO START" doc:id="36ba1e13-4f3c-4a0b-bfcc-cd9e273b145f" message="impl-get-artists::START" category="${log.cat}"/>
		<flow-ref doc:name="sr-build-query-param-list" doc:id="88cb9e1c-8ec5-40b7-b835-5105c26d4501" name="sr-build-query-param-list" target="queryParamList" targetValue="#[message.payload]"/>
		<flow-ref doc:name="sr-select-artists" doc:id="fbe78cda-3e59-4dc3-a9a2-cdb6126bb9b9" name="sr-select-artists"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="d644ef0c-6f1b-4e52-8b26-b95a43896f20" >
		<logger level="INFO" doc:name="INFO START" doc:id="ebf48f54-54c9-4f85-b3ac-931d99d6e41e" message="#['sr-select-artists::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;   output application/java&#10;---&#10;(&quot;1=1&quot;&#10;	++ (if(vars.queryParamList.lastName != null) &quot; AND lower(LAST_NM) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(FIRST_NM) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(GROUP_NM) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND BIRTH_DATE = :dateOfBirth&quot; else &quot;&quot;)&#10;) as String]" doc:name="whereClause" doc:id="7d135c13-bd0f-40cc-b3fe-dd04cdf27b1c" variableName="whereClause"/>
		<db:select doc:name="Select" doc:id="c6bbb7f1-7dd1-43d2-a479-aa02115e1dd5" config-ref="mysql-connection" >
			<db:sql ><![CDATA[#["SELECT ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, BIRTH_DATE, MI, DEATH_DATE 	
    FROM BC_ARTIST 
	  WHERE $(vars.whereClause)"]

]]></db:sql>
			<db:input-parameters ><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="54678979-e907-4a48-87b7-524d9ca31cfb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"statusCode": p('http.get.status.ok'),
	"message": p('http.get.message.ok'),
	"searchCriteria": ("[" 
	++ (if(vars.queryParamList.lastName != null) "lastName: '$(((vars.queryParamList.lastName default "")))', " else "")
	++ (if(vars.queryParamList.firstName != null) "firstName: '$(((vars.queryParamList.firstName default "")))', " else "")
	++ (if(vars.queryParamList.groupName != null) "groupName: '$(((vars.queryParamList.groupName default "")))', " else "")
	++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(((vars.queryParamList.dateOfBirth default "")))', " else "")
    ++ "]"	),	
    artists: payload map ( artist ) -> {
		artistId: artist.ARTIST_ID default 0,
		groupName: artist.GROUP_NM default "",
		lastName: artist.LAST_NM default "",
		firstName: artist.FIRST_NM default "",
		mi: artist.MI default "",
		dateOfBirth: artist.BIRTH_DATE as String {format: "yyyy-MM-dd"} default "",
		(if (artist.DEATH_DATE != null) (dateOfDeath: artist.DEATH_DATE as String {format: "yyyy-MM-dd"}) else dateOfDeath: "")
	}
}
    ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="c90fc73c-119f-4ec6-bfa4-742f053cd7c2" >
		<logger level="INFO" doc:name="INFO START" doc:id="983e28cf-5266-4382-a05f-f201450469b7" message="#['sr-build-query-param-list::START::payload: ' ++ write(payload,'application/json')]"/>
		<ee:transform doc:name="queryParams" doc:id="36804c5a-6620-420c-bb08-130619518253" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: message.attributes.queryParams.firstName,
	lastName: message.attributes.queryParams.lastName,
	dateOfBirth: message.attributes.queryParams.dateOfBirth,
	groupName: message.attributes.queryParams.groupName
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="INFO END" doc:id="810120bb-12b8-43df-911c-873231fe024f" message="#['sr-build-query-param-list::END::payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="7642bb7e-1974-4120-b3bf-af392804ca14" >
		<logger level="INFO" doc:name="INFO size of" doc:id="86c5bc17-05bc-4f35-bcd3-e96ab0b878fe" message="#['impl-add-artists::START::sizeOf payload: '  ++ sizeOf(payload.artists)]"/>
		<ee:transform doc:name="artists, artistsOut, artistsFound" doc:id="cac21919-26ef-4ae2-8ffa-415d6a64dfcd" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="artistsOut" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artists" ><![CDATA[%dw 2.0
output application/json
---
message.payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<set-variable value="#[[]]" doc:name="artistsFound" doc:id="20707cf0-f620-4e3a-875c-5fd06630cab3" variableName="artistsFound"/>
		<foreach doc:name="For Each Artist" doc:id="10ad0802-c48b-47ca-80fa-98ef545fc25c" collection="#[vars.artists]">
			<logger level="INFO" doc:name="Payload artist" doc:id="744da7a9-2007-4b28-8d0a-ef585a37ee09" message="#['impl-add-artists::ForEach::payload: ' ++ write(payload,'application/json')]"/>
			<set-payload doc:name="Artist" doc:id="e9ead0cb-b566-4ffa-9f7d-bdcb7b05385c" value="#[output application/json&#10;---&#10;{&#10;	artist:{&#10;		artistId: payload.aristId,&#10;		groupName: payload.groupName,&#10;		lastName: payload.lastName,&#10;		firstName: payload.firstName,&#10;		mi: payload.mi,&#10;		dateOfBirth: payload.dateOfBirth,&#10;		dateOfDeath: payload.dateOfDeath	&#10;	}&#10;}]"/>
			<logger level="INFO" doc:name="artist" doc:id="59aa581e-3a3a-4f29-b305-3cce79a9b6f5" message="#['impl-add-artists::ForEach::artist: ' ++ write(payload, 'application/json')]"/>
			<flow-ref doc:name="sr-find-duplicate-artist" doc:id="e0c4170e-d156-418e-a2c5-63d3e8e995c8" name="sr-find-duplicate-artist" target="getArtistResponse"/>
			<choice doc:name="Artist Found?" doc:id="f2e56bf8-6350-4885-ab6f-baa95521d2a9" >
				<when expression="#[vars.getArtistResponse.artists[0]==null]">
					<flow-ref doc:name="sr-insert-Artist" doc:id="8aa54272-d9ee-4405-a0f9-9123eebc0094" name="sr-insert-Artist" target="newArtist" />
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsOut + vars.newArtist]" doc:name="append artistsOut" doc:id="2701fb1d-ff66-4d2d-9273-4288c6dd15d4" variableName="artistsOut" />
					<logger level="INFO" doc:name="artistOut" doc:id="b78d54b2-e943-4f4c-85a0-90f09e3686de" message="#['impl-add-artists::ForEach::Choice::artistsOut: ' ++ write(payload,'application/json')]"/>
				</when>
				<otherwise >
					<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;	vars.artistsFound + vars.getArtistResponse.artists[0]]" doc:name="append artistFound" doc:id="f5b01707-dd60-4b79-a4d8-114d81e1b75e" variableName="artistsFound"/>
				</otherwise>
			</choice>
		</foreach>
		<ee:transform doc:name="Transform Message" doc:id="b8f60c5c-7f06-47fb-afb9-176ea2ce96f7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	results: {
		addedCounts: if (vars.artistsOut[0]==null) "0" else sizeOf(vars.artistsOut), 
		addedArtists: if (vars.artistsOut[0]==null) "[]" else vars.artistsOut, 
		duplicatedCounts: if (vars.artistsFound[0]==null) "0" else sizeOf(vars.artistsFound), 
		duplicatedArtists: if (vars.artistsFound[0]==null) "[]" else vars.artistsFound, 
	}
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<sub-flow name="sr-find-duplicate-artist" doc:id="1b90a119-bf8c-4a4d-aaec-507369d58bbf" >
		<logger level="INFO" doc:name="INFO START" doc:id="2c93f766-176b-428f-b68f-b59f699c8416" message="#['sr-find-duplicate-artist::START::payload: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;var artist = message.payload.artist&#10;---&#10;{&#10;    groupName: 	artist.groupName,&#10;    firstName: 	artist.firstName,&#10;    lastName:     artist.lastName,&#10;    dateOfBirth:  artist.dateOfBirth&#10;  }]" doc:name="queryParamList" doc:id="2ae89455-99ac-427f-8e88-d110146ff864" variableName="queryParamList"/>
		<logger level="INFO" doc:name="Debug queryParamList" doc:id="66c242ec-9d5f-4c8e-aeb8-25f6d832abf5" message="#['sr-find-duplicate-artist::queryParamList' ++ write(vars.queryParamList,'application/json')]"/>
		<flow-ref doc:name="sr-select-artist" doc:id="6b03e0a5-6734-4398-b9e5-7958c7c0dcba" name="sr-select-artists"/>
		<logger level="INFO" doc:name="INFO Size of" doc:id="7b072d11-e600-46c8-b256-6438ad5c4021" message="#['sr-find-duplicate-artist' ++ sizeOf(payload.artists)]"/>
	</sub-flow>
	<sub-flow name="sr-insert-Artist" doc:id="ee572642-5a49-4b59-8095-05b81a1a1c50" >
		<logger level="INFO" doc:name="INFO START payload" doc:id="67768664-53c1-45be-9aa1-3ebe0265a1fb" message="#['sr-insert-artist::START::artist: ' ++ write(payload,'application/json')]"/>
		<set-variable value="#[message.payload.artist]" doc:name="incomingArtist" doc:id="b257eb52-d8e5-48c3-b369-c5fe95ae7545" variableName="incomingArtist"/>
		<try doc:name="Try" doc:id="66bf5940-1335-4d91-9431-6fa742440a25" >
			<db:insert doc:name="Insert Artist" doc:id="1bb2b836-3d98-4631-bbb2-61215f3e2292" config-ref="mysql-connection">
			<db:sql><![CDATA[INSERT INTO BC_MUSIC_FACTORY.BC_ARTIST 
         (ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, MI, BIRTH_DATE, DEATH_DATE, STATUS_CD) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, 'CV')]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
			<db:select doc:name="Select Insert" doc:id="508152be-2344-4bcd-8b12-701dd889c1f8" config-ref="mysql-connection" target="newArtistId">
			<db:sql><![CDATA[SELECT MAX(artist_id) AS artist_id from BC_MUSIC_FACTORY.BC_ARTIST
    WHERE GROUP_NM = :groupName 
          AND BIRTH_DATE = :birthDate 
          AND FIRST_NM = :firstName
          AND LAST_NM = :lastName
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
			<set-payload value="#[output application/java&#10;var artist = vars.incomingArtist&#10;var newArtistId = vars.newArtistId[0].artist_id default 0&#10;---&#10;{&#10;	artistId: 	newArtistId,&#10;	groupName: 	artist.groupName,&#10;	lastName: 	artist.lastName,&#10;	firstName: 	artist.firstName,&#10;	mi:       	artist.mi,&#10;	dateOfBirth: 	artist.dateOfBirth,&#10;	dateOfDeath:	artist.dateOfDeath&#10;}]" doc:name="Update the payload inserted" doc:id="5473557e-6b51-4e16-a7a6-bb11851770e0" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="fdf1553f-b63d-4f48-9034-da0d91ec3960" type="DB:QUERY_EXECUTION">
					<logger level="INFO" doc:name="ERROR" doc:id="7740bb2c-221a-4508-b199-5e24559ff7d1" message="#['sr-insert-artist::OnErrorPropagate::payload: ' ++ write(payload,'application/json')]"/>
				</on-error-propagate>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="6e0ecfea-ddf3-44c0-b733-c1b56e5425a6" type="EXPRESSION">
					<logger level="INFO" doc:name="ERROR" doc:id="a2200e13-9442-4acf-b797-8ed37351e8e6" message="#['sr-insert-artist::OnErrorContinue::payload: ' ++ write(payload,'application/json')]"/>
				</on-error-continue>
			</error-handler>
		</try>
		<logger level="INFO" doc:name="INFO END payload" doc:id="f23899e9-4d6f-49d8-9ddb-1b719006ef2d" message="#['sr-insert-artist::END:payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="f2a1f707-209f-4c2f-a600-270ffe521c38" >
		<logger level="INFO" doc:name="INFO START" doc:id="e79b5ff0-69ff-4f1a-aba0-5a80db8084fd" message="#['impl-update-artist-urls::START::payload:'  ++ write(payload, 'application/json')]"/>
		<set-variable value="#[%dw 2.0&#10;import p from Mule&#10;&#10;output application/java&#10;---&#10;{&#10;	method: p('last.fm.method'),&#10;	apiKey: p('last.fm.api.key'),&#10;	format: p('last.fm.format'),&#10;	artist: payload.groupName&#10;}]" doc:name="lastFmProperties" doc:id="4c8c6e01-f80e-4e4b-a1df-837b3bf588b7" variableName="lastFmProperties"/>
		<flow-ref doc:name="sr-get-artist-info" doc:id="9c7aedcf-7b03-4c35-8c49-c0afe6e582c1" name="sr-get-artist-info" target="lastFmResponse"/>
		<choice doc:name="Artist Found?" doc:id="6fb9e1b3-9c14-4c5d-9c0a-ca2defcb8df9" >
			<when expression='#[vars.lastFmResponse.statusCode=="201"]'>
				<logger level="INFO" doc:name="Placeholder" doc:id="a241d554-00ee-4ed5-a9b3-4040c7fc6a4f" message="#['impl-update-artists-urls::Choice::Placehoder::payload: ' ++ write(payload,'application/json')]"/>
				<flow-ref doc:name="sr-patch-artist" doc:id="50b0b9e0-fc8a-4fa4-9c32-5c70bf7ceece" name="sr-patch-artist"/>
			</when>
			<otherwise >
				<ee:transform doc:name="NOT FOUND RESPONSE" doc:id="f1de21c3-999f-4871-8540-60eedc30ab53" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.lastFmResponse
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
		<logger level="INFO" doc:name="INFO FINAL RESPONSE" doc:id="3e8d2ea3-461f-452e-9a74-d00d561b023e" message="#['impl-update-artists-urls::FinalResponse::payload: ' ++ write(payload, 'application/json')]"/>
	</sub-flow>
	<sub-flow name="sr-get-artist-info" doc:id="9d819c42-3dc2-4cdb-a7dd-53a21ac98be5" >
		<logger level="INFO" doc:name="INFO START" doc:id="14331a12-0792-4f0e-b778-09b60c647085" message="#['sr-get-artist-info::START::payload: ' ++ write(payload, 'application/json')]"/>
		<http:request method="GET" doc:name="Get Artist Bio" doc:id="9a38b51e-54b0-42c3-b04d-3773731aee28" config-ref="last-fm-http-config" path="/${last.fm.version}" >
			<http:query-params ><![CDATA[#[{
	"method": vars.lastFmProperties.method,
	"api_key": vars.lastFmProperties.apiKey,
	"artist": vars.lastFmProperties.artist,
	"format": vars.lastFmProperties.format
}]]]></http:query-params>
		</http:request>
		<logger level="INFO" doc:name="Debug Get Response" doc:id="fcf84eea-4a66-4ff7-a525-4e6fa134e487" message="#['impl-update-artists-urls::DEBUG:payload: ' ++ write(payload,'application/json')]" />
		<ee:transform doc:name="payload" doc:id="8912be9b-8f86-4983-ae83-200cb48692ed" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var NOT_FOUND_STATUS = p('http.patch.status.nf')
var NOT_FOUND_MESSAGE = p('http.patch.message.nf')
var FOUND_STATUS = p('http.patch.status.ok')
var FOUND_MESSAGE = p('http.patch.message.ok')
---
{
statusCode: if(payload.artist.bio.content==null) (NOT_FOUND_STATUS) else (FOUND_STATUS),
message: if(payload.artist.bio.content==null) (NOT_FOUND_MESSAGE) else (FOUND_MESSAGE),
bioUrl: if(payload.artist.bio.content != null) (	payload.artist.bio.links.link.href)  else (NOT_FOUND_MESSAGE)

}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="INFO END" doc:id="ddda77bd-19c3-46c1-bb5b-0393b468bec8" message="#['sr-get-artist-info::END::payload:' ++ write(payload,'application/json')]"/>
	</sub-flow>
	<sub-flow name="sr-patch-artist" doc:id="66e96496-f341-4f89-b47f-6d7d35881812" >
		<logger level="INFO" doc:name="INFO START " doc:id="ac620711-701e-4047-96e7-7f840fd025d4" message="#['sr-patch-artist::START::lastFmResponse: ' ++ write(vars.lastFmResponse,'application/json')]"/>
		<set-variable value="#[vars.lastFmResponse.bioUrl]" doc:name="bioUrl" doc:id="a4e16b56-3265-432d-954c-4fd1e88d3a87" variableName="bioUrl"/>
		<db:update doc:name="Update Artist" doc:id="7218477b-ff20-4799-94d7-24a523126176" config-ref="mysql-connection">
			<db:sql ><![CDATA[UPDATE BC_ARTIST
  SET bio_url = :bioUrl
  WHERE group_nm = :groupName
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bioUrl: vars.bioUrl,
	groupName: vars.lastFmProperties.artist
}]]]></db:input-parameters>
		</db:update>
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;var FOUND_STATUS = p('http.get.status.ok')&#10;var FOUND_MESSAGE = p('http.get.message.ok')&#10;---&#10;{&#10;	statusCode: FOUND_STATUS,&#10;	message: FOUND_MESSAGE,&#10;	bioUrl: vars.bioUrl,&#10;	recordsUpdated: payload.affectedRows&#10;}]" doc:name="Set Payload" doc:id="11787251-e7a4-4946-b3b9-ff4e121c91ad" />
		<logger level="INFO" doc:name="INFO END payload" doc:id="ad6ed3e3-f8ae-47c8-a11e-1c23093983a3" message="#['sr-patch-artist::END::payload: ' ++ write(payload,'application/json')]"/>
	</sub-flow>
</mule>
