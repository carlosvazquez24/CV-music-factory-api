<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:sps-logger="http://www.mulesoft.org/schema/mule/sps-logger" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/sps-logger http://www.mulesoft.org/schema/mule/sps-logger/current/mule-sps-logger.xsd">
	<sub-flow name="impl-get-artists" doc:id="19434f60-fa56-45b1-bb52-30415497eebb" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="6b7b98ff-3757-49ca-92cf-b5c29ce4b9ba" config-ref="SPS_Logger_Config" eventName="START" message="#['impl-get-artists::START::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<flow-ref doc:name="sr-build-query-param-list" doc:id="88cb9e1c-8ec5-40b7-b835-5105c26d4501" name="sr-build-query-param-list" target="queryParamList" targetValue="#[message.payload]"/>
		<flow-ref doc:name="sr-select-artists" doc:id="fbe78cda-3e59-4dc3-a9a2-cdb6126bb9b9" name="sr-select-artists"/>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="7ee0a105-4c3a-4da2-83d3-89fc97fea20f" config-ref="SPS_Logger_Config" eventName="END" message="#['impl-get-artists::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-select-artists" doc:id="d644ef0c-6f1b-4e52-8b26-b95a43896f20" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="2c56fd7a-1352-4361-983d-d72d5bda3c76" config-ref="SPS_Logger_Config" eventName="START" message="#['sr-select-artists::START::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
		<set-variable value="#[%dw 2.0&#10;   output application/java&#10;---&#10;(&quot;1=1&quot;&#10;	++ (if(vars.queryParamList.lastName != null) &quot; AND lower(LAST_NM) LIKE concat(lower(:lastName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.firstName != null) &quot; AND lower(FIRST_NM) LIKE concat(lower(:firstName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.groupName != null) &quot; AND lower(GROUP_NM) LIKE concat(lower(:groupName),'%')&quot; else &quot;&quot;)&#10;    ++ (if(vars.queryParamList.dateOfBirth != null) &quot; AND BIRTH_DATE = :dateOfBirth&quot; else &quot;&quot;)&#10;) as String]" doc:name="whereClause" doc:id="7d135c13-bd0f-40cc-b3fe-dd04cdf27b1c" variableName="whereClause"/>
		<sps-logger:sps-logger doc:name="whereClause" doc:id="5d74ba43-1473-4214-adc2-5315262c7cb7" config-ref="SPS_Logger_Config" level="WARN" message="#['sr-select-artists' ++ write(vars.whereClause, &quot;application/json&quot;)]" category="${logcat}"/>
		<db:select doc:name="Select" doc:id="c6bbb7f1-7dd1-43d2-a479-aa02115e1dd5" config-ref="${db.config}" >
			<db:sql ><![CDATA[#["SELECT ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, BIRTH_DATE, MI, DEATH_DATE 	
    FROM BC_ARTIST 
	  WHERE $(vars.whereClause)"]

]]></db:sql>
			<db:input-parameters ><![CDATA[#[vars.queryParamList]]]></db:input-parameters>
		</db:select>
		<sps-logger:sps-logger doc:name="SELECT ARTIST" doc:id="3744b7a5-7f0f-4efe-8715-e81c5daa9fb0" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" message="#['SR-SELECT-ARTISTS::SELECT::artist' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<ee:transform doc:name="Transform Message" doc:id="54678979-e907-4a48-87b7-524d9ca31cfb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"statusCode": p('http.get.status.ok'),
	"message": p('http.get.message.ok'),
	"searchCriteria": ("[" 
	++ (if(vars.queryParamList.lastName != null) "lastName: '$(((vars.queryParamList.lastName default "")))', " else "")
	++ (if(vars.queryParamList.firstName != null) "firstName: '$(((vars.queryParamList.firstName default "")))', " else "")
	++ (if(vars.queryParamList.groupName != null) "groupName: '$(((vars.queryParamList.groupName default "")))', " else "")
	++ (if(vars.queryParamList.dateOfBirth != null) "birthDate: '$(((vars.queryParamList.dateOfBirth default "")))', " else "")
    ++ "]"	),	
    artists: payload map ( artist ) -> {
		artistId: artist.ARTIST_ID default 0,
		groupName: artist.GROUP_NM default "",
		lastName: artist.LAST_NM default "",
		firstName: artist.FIRST_NM default "",
		mi: artist.MI default "",
		dateOfBirth: artist.BIRTH_DATE as String {format: "yyyy-MM-dd"} default "",
		(if (artist.DEATH_DATE != null) (dateOfDeath: artist.DEATH_DATE as String {format: "yyyy-MM-dd"}) else dateOfDeath: "")
	}
}
    ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="2930789c-c9ec-439c-acec-7562503d5677" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-select-artists::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-build-query-param-list" doc:id="c90fc73c-119f-4ec6-bfa4-742f053cd7c2" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="02306983-2fc8-4a39-a454-bbd7ee9eafbe" config-ref="SPS_Logger_Config" eventName="START" message="#['sr-build-query-param-list::START::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
		<ee:transform doc:name="queryParams" doc:id="36804c5a-6620-420c-bb08-130619518253" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	firstName: message.attributes.queryParams.firstName,
	lastName: message.attributes.queryParams.lastName,
	dateOfBirth: message.attributes.queryParams.dateOfBirth,
	groupName: message.attributes.queryParams.groupName
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="1baee008-85eb-4335-9f8e-b6a1b9012720" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-build-query-param-list::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="impl-add-artists" doc:id="7642bb7e-1974-4120-b3bf-af392804ca14" >
		<sps-logger:sps-logger doc:name="INFO SIZE OF" doc:id="7e25b91e-e3a2-4f8b-8e52-0bf69284928c" config-ref="SPS_Logger_Config" eventName="START" category="${logcat}" message="#['impl-add-artists::START:payload:' ++  sizeOf(payload.artists)]"/>
		<ee:transform doc:name="artists, artistsOut, artistsFound" doc:id="cac21919-26ef-4ae2-8ffa-415d6a64dfcd" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="artistsOut" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artistsFound" ><![CDATA[%dw 2.0
output application/json
---
[]]]></ee:set-variable>
				<ee:set-variable variableName="artists" ><![CDATA[%dw 2.0
output application/json
---
message.payload.artists]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<sps-logger:sps-logger doc:name="Artists" doc:id="f7be1476-fb06-48bc-9bf5-f8c607ff1a10" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" message="#['impl-add-artists::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<set-variable value="#[[]]" doc:name="artistsFound" doc:id="20707cf0-f620-4e3a-875c-5fd06630cab3" variableName="artistsFound"/>
		<foreach doc:name="For Each Artist" doc:id="10ad0802-c48b-47ca-80fa-98ef545fc25c" collection="#[vars.artists]">
			<sps-logger:sps-logger doc:name="Payload artist" doc:id="4a1c3cce-1fe3-4a5e-84ee-fb03665684d3" eventName="BEFORE TRANSFORM" level="DEBUG" message="#['impl-add-artists::forEach::payload' ++ write(payload, &quot;application/json&quot;)]" config-ref="SPS_Logger_Config" category="${logcat}"/>
			<set-payload doc:name="Artist" doc:id="e9ead0cb-b566-4ffa-9f7d-bdcb7b05385c" value="#[output application/json&#10;---&#10;{&#10;	artist:{&#10;		artistId: payload.aristId,&#10;		groupName: payload.groupName,&#10;		lastName: payload.lastName,&#10;		firstName: payload.firstName,&#10;		mi: payload.mi,&#10;		dateOfBirth: payload.dateOfBirth,&#10;		dateOfDeath: payload.dateOfDeath	&#10;	}&#10;}]"/>
			<sps-logger:sps-logger doc:name="artist" doc:id="8b603da9-d818-42f8-bf89-d94770f5c1d5" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" message="#['impl-add-artists::forEach::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
			<flow-ref doc:name="sr-find-duplicate-artist" doc:id="e0c4170e-d156-418e-a2c5-63d3e8e995c8" name="sr-find-duplicate-artist" target="getArtistResponse"/>
			<sps-logger:sps-logger doc:name="Modified artists" doc:id="924b1680-1b5d-4dbe-8207-3eb9b59d39d5" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" message="#['impl-add-artists::forEach::getArtistResponse' ++ write(vars.getArtistResponse, &quot;application/json&quot;)]" category="${logcat}"/>
			<choice doc:name="Artist Found?" doc:id="f2e56bf8-6350-4885-ab6f-baa95521d2a9" >
				<when expression="#[vars.getArtistResponse.artists[0]==null]">
					<sps-logger:sps-logger doc:name="Modified artist" doc:id="2e672a76-1be0-452c-b4f5-1f9d7de36e90" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" message="#['impl-add-artists::forEachChoice::getArtistResponse' ++ write(vars.getArtistResponse, &quot;application/json&quot;)]" category="${logcat}"/>
					<flow-ref doc:name="sr-insert-Artist" doc:id="8aa54272-d9ee-4405-a0f9-9123eebc0094" name="sr-insert-Artist" target="newArtist" />
					<sps-logger:sps-logger doc:name="Inserted artist" doc:id="b6add0cb-7949-4605-8061-f1bc226e7751" config-ref="SPS_Logger_Config" message="#['impl-add-artist::forEachChoice:newArtist' ++ write(vars.newArtist, &quot;application/json&quot;)]" category="${logcat}"/>
					<set-variable value="#[%dw 2.0&#10;output application/java&#10;---&#10;vars.artistsOut + vars.newArtist]" doc:name="append artistsOut" doc:id="2701fb1d-ff66-4d2d-9273-4288c6dd15d4" variableName="artistsOut" />
					<sps-logger:sps-logger doc:name="artistOut" doc:id="a962520e-3ff3-4aba-9dc1-b1a1f3d3a829" config-ref="SPS_Logger_Config" message="#['impl-add-artists::forEachChoice::artistOut' ++ write(vars.artistsOut, &quot;application/json&quot;)]" category="${logcat}"/>
				</when>
				<otherwise >
					<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;	vars.artistsFound + vars.getArtistResponse.artists[0]]" doc:name="append artistFound" doc:id="f5b01707-dd60-4b79-a4d8-114d81e1b75e" variableName="artistsFound"/>
					<sps-logger:sps-logger doc:name="artistFound" doc:id="f4fad138-3426-49fd-817f-029fe69e6c29" config-ref="SPS_Logger_Config" message="#['impl-add-artists::forEachChoice::artistFound' ++ write(vars.artistsFound, &quot;application/json&quot;)]" category="${logcat}"/>
				</otherwise>
			</choice>
		</foreach>
		<sps-logger:sps-logger doc:name="Artist Payload" doc:id="7d28b94a-699a-4bcc-a581-185f69faa041" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" message="#['impl-add-artists::Artist:'  ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<ee:transform doc:name="Transform Message" doc:id="b8f60c5c-7f06-47fb-afb9-176ea2ce96f7" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	results: {
		addedCounts: if (vars.artistsOut[0]==null) "0" else sizeOf(vars.artistsOut), 
		addedArtists: if (vars.artistsOut[0]==null) "[]" else vars.artistsOut, 
		duplicatedCounts: if (vars.artistsFound[0]==null) "0" else sizeOf(vars.artistsFound), 
		duplicatedArtists: if (vars.artistsFound[0]==null) "[]" else vars.artistsFound, 
	}
}

]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="292d126e-243a-44b4-ade8-e34db97388ce" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-find-duplicate-artist::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="sr-find-duplicate-artist" doc:id="1b90a119-bf8c-4a4d-aaec-507369d58bbf" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="dc067266-e3fa-47db-bd67-8d3d27569886" config-ref="SPS_Logger_Config" eventName="START" category="${logcat}" message="#['sr-find-duplicate-artist::START:payload:' ++ write(payload, &quot;application/json&quot;)]"/>
		<set-variable value="#[%dw 2.0&#10;output application/java&#10;var artist = message.payload.artist&#10;---&#10;{&#10;    groupName: 	artist.groupName,&#10;    firstName: 	artist.firstName,&#10;    lastName:     artist.lastName,&#10;    dateOfBirth:  artist.dateOfBirth&#10;  }]" doc:name="queryParamList" doc:id="2ae89455-99ac-427f-8e88-d110146ff864" variableName="queryParamList"/>
		<sps-logger:sps-logger doc:name="Debug queryParamList" doc:id="5065aba2-a696-4046-a443-5c1d71b2ced5" config-ref="SPS_Logger_Config" level="WARN" message="#['sr-find-duplicate-artist::VAR::queryParamList' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<flow-ref doc:name="sr-select-artist" doc:id="6b03e0a5-6734-4398-b9e5-7958c7c0dcba" name="sr-select-artists"/>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="65cac7d8-3db0-4028-967a-b30a5ab82001" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-find-duplicate-artist::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-insert-Artist" doc:id="ee572642-5a49-4b59-8095-05b81a1a1c50" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="e24e751f-f2bf-491d-ab1a-a66edf99d845" config-ref="SPS_Logger_Config" eventName="START" category="${logcat}" message="#['sr-insert-Artist::START:payload:' ++ write(payload, &quot;application/json&quot;)]"/>
		<set-variable value="#[message.payload.artist]" doc:name="incomingArtist" doc:id="b257eb52-d8e5-48c3-b369-c5fe95ae7545" variableName="incomingArtist"/>
		<try doc:name="Try" doc:id="66bf5940-1335-4d91-9431-6fa742440a25" >
			<sps-logger:sps-logger doc:name="incomingArtist" doc:id="72e53962-f0db-4c3b-9bfd-f71d10ef124d" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="BEFORE REQUEST" message="#['sr-insert-Artist::Try::incomingArtist' ++ write(vars.incomingArtist, &quot;application/json&quot;)]" category="${logcat}"/>
			<db:insert doc:name="Insert Artist" doc:id="1bb2b836-3d98-4631-bbb2-61215f3e2292" config-ref="mysql-connection">
			<db:sql><![CDATA[INSERT INTO BC_MUSIC_FACTORY.BC_ARTIST 
         (ARTIST_ID, GROUP_NM, FIRST_NM, LAST_NM, MI, BIRTH_DATE, DEATH_DATE, STATUS_CD) 
         VALUES (NULL, :groupName, :firstName, :lastName, :mi, :birthDate, :deathDate, 'CV')]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    mi: 	  	vars.incomingArtist.mi,
    birthDate: 	vars.incomingArtist.dateOfBirth,
    deathDate: 	vars.incomingArtist.dateOfDeath
}]]]></db:input-parameters>
		</db:insert>
			<sps-logger:sps-logger doc:name="Artist" doc:id="76d9dac9-ed8b-4a99-b5de-0b874d9abf73" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" message="#['sr-insert-Artist::Try::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
			<db:select doc:name="Select Insert" doc:id="508152be-2344-4bcd-8b12-701dd889c1f8" config-ref="mysql-connection" target="newArtistId">
			<db:sql><![CDATA[SELECT MAX(artist_id) AS artist_id from BC_MUSIC_FACTORY.BC_ARTIST
    WHERE GROUP_NM = :groupName 
          AND BIRTH_DATE = :birthDate 
          AND FIRST_NM = :firstName
          AND LAST_NM = :lastName
]]></db:sql>
			<db:input-parameters><![CDATA[#[{
    groupName: 	vars.incomingArtist.groupName,
    firstName: 	vars.incomingArtist.firstName,
    lastName: 	vars.incomingArtist.lastName,
    birthDate: 	vars.incomingArtist.dateOfBirth
}]]]></db:input-parameters>
		</db:select>
			<sps-logger:sps-logger doc:name="Select Insert" doc:id="577e7fe2-07ac-4831-b1c4-6f373e5461fa" config-ref="SPS_Logger_Config" targetSystem="${db.databaseMusic}" eventName="AFTER REQUEST" level="DEBUG" message="#['sr-insert-Artist::Try::payload' ++ write(payload, &quot;application/json&quot;)]" category=" ${logcat}"/>
			<sps-logger:sps-logger doc:name="Update Payload" doc:id="fc154c84-0f67-459d-a7b5-0cef6bdf68fa" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" message="#['sr-Insert-Artist::Try::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
			<set-payload value="#[output application/java&#10;var artist = vars.incomingArtist&#10;var newArtistId = vars.newArtistId[0].artist_id default 0&#10;---&#10;{&#10;	artistId: 	newArtistId,&#10;	groupName: 	artist.groupName,&#10;	lastName: 	artist.lastName,&#10;	firstName: 	artist.firstName,&#10;	mi:       	artist.mi,&#10;	dateOfBirth: 	artist.dateOfBirth,&#10;	dateOfDeath:	artist.dateOfDeath&#10;}]" doc:name="Update the payload inserted" doc:id="5473557e-6b51-4e16-a7a6-bb11851770e0" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="fdf1553f-b63d-4f48-9034-da0d91ec3960" type="DB:QUERY_EXECUTION">
					<sps-logger:sps-logger doc:name="ERROR" doc:id="d00d415a-561a-4318-af6b-f55d105da902" config-ref="SPS_Logger_Config" eventName="EXCEPTION" level="ERROR" message="#['sr-insert-Artist::Try::onErrorPropagate' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
				</on-error-propagate>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="6e0ecfea-ddf3-44c0-b733-c1b56e5425a6" type="EXPRESSION">
					<sps-logger:sps-logger doc:name="ERROR" doc:id="8cbd0122-ffd0-4fa1-912a-9d543e6b11a5" config-ref="SPS_Logger_Config" eventName="EXCEPTION" level="ERROR" message="#['sr-insert-Artist::Try::onErrorContinue' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
				</on-error-continue>
			</error-handler>
		</try>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="6537645e-f70b-4b8b-b8dc-36ef22c6fa9f" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-find-duplicate-artist::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
	</sub-flow>
	<sub-flow name="impl-update-artist-urls" doc:id="f2a1f707-209f-4c2f-a600-270ffe521c38" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="eba41839-cbbe-4c75-8b14-68f0e5e70b06" config-ref="SPS_Logger_Config" eventName="START" message="#['impl-update-artist-urls::START:payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
		<set-variable value="#[%dw 2.0&#10;import p from Mule&#10;&#10;output application/java&#10;---&#10;{&#10;	method: p('last.fm.method'),&#10;	apiKey: p('last.fm.api.key'),&#10;	format: p('last.fm.format'),&#10;	artist: payload.groupName&#10;}]" doc:name="lastFmProperties" doc:id="4c8c6e01-f80e-4e4b-a1df-837b3bf588b7" variableName="lastFmProperties"/>
		<sps-logger:sps-logger doc:name="lastFmProperties" doc:id="9b30fdc6-6e12-478f-b6f6-c8ad299b6f29" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" message="#['impl-update-artist-urls::Var::lastFmProperties:' ++ write(vars.lastFmProperties, 'application/json')]" category="${logcat}"/>
		<flow-ref doc:name="sr-get-artist-info" doc:id="9c7aedcf-7b03-4c35-8c49-c0afe6e582c1" name="sr-get-artist-info" target="lastFmResponse"/>
		<sps-logger:sps-logger doc:name="Artist info" doc:id="01842a91-7914-48b5-a6b4-56166ef3941d" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" message="#['impl-update-artist-urls::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
		<choice doc:name="Artist Found?" doc:id="6fb9e1b3-9c14-4c5d-9c0a-ca2defcb8df9" >
			<when expression='#[vars.lastFmResponse.statusCode=="201"]'>
				<sps-logger:sps-logger doc:name="Artist" doc:id="aa62f395-fe96-45ea-a4c7-65fa5655ad24" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
				<flow-ref doc:name="Artist" doc:id="50b0b9e0-fc8a-4fa4-9c32-5c70bf7ceece" name="sr-patch-artist"/>
				<sps-logger:sps-logger doc:name="Patch Artist" doc:id="fc813bf7-af77-4e70-b5bb-9afbc5b153f9" eventName="AFTER REQUEST" level="DEBUG" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			</when>
			<otherwise >
				<sps-logger:sps-logger doc:name="Artist" doc:id="af8ace83-4ecc-4013-8b47-5effc13c86d0" config-ref="SPS_Logger_Config" eventName="BEFORE TRANSFORM" level="DEBUG" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
				<ee:transform doc:name="NOT FOUND RESPONSE" doc:id="f1de21c3-999f-4871-8540-60eedc30ab53" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.lastFmResponse
]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<sps-logger:sps-logger doc:name="NOT FOUND" doc:id="1f911d97-b3e4-46e9-a2fd-be86e7914794" config-ref="SPS_Logger_Config" eventName="AFTER TRANSFORM" level="DEBUG" message="#['impl-update-artist-urls::Choice::payload:' ++ write(payload, 'application/json')]" category="${logcat}"/>
			</otherwise>
		</choice>
		<sps-logger:sps-logger doc:name="INFO FINAL RESPONSE" doc:id="efdfe1c3-24db-4bec-83e4-5d2f85638edd" config-ref="SPS_Logger_Config" eventName="END" message="#['impl-update-artist-url::START:payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-get-artist-info" doc:id="9d819c42-3dc2-4cdb-a7dd-53a21ac98be5" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="3cd4c97e-9de3-470a-9be4-d782de005ca5" config-ref="SPS_Logger_Config" eventName="START" message="#['sr-get-artist-info::START:payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
		<http:request method="GET" doc:name="Get Artist Bio" doc:id="9a38b51e-54b0-42c3-b04d-3773731aee28" config-ref="last-fm-http-config" path="/${last.fm.version}" >
			<http:query-params ><![CDATA[#[{
	"method": vars.lastFmProperties.method,
	"api_key": vars.lastFmProperties.apiKey,
	"artist": vars.lastFmProperties.artist,
	"format": vars.lastFmProperties.format
}]]]></http:query-params>
		</http:request>
		<sps-logger:sps-logger doc:name="Artist Bio" doc:id="ae5eb595-4e38-495f-bfbf-d0aa92d9111b" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" message="#['sr-get-artist-info::Request::payload:' ++ write(payload, 'application/json')]" statusCode="#[if(payload.artist.bio.content==null) p('http.get.status.nf') else p('http.get.status.ok')]" category="${logcat}"/>
		<ee:transform doc:name="payload" doc:id="8912be9b-8f86-4983-ae83-200cb48692ed" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
var NOT_FOUND_STATUS = p('http.patch.status.nf')
var NOT_FOUND_MESSAGE = p('http.patch.message.nf')
var FOUND_STATUS = p('http.patch.status.ok')
var FOUND_MESSAGE = p('http.patch.message.ok')
---
{
statusCode: if(payload.artist.bio.content==null) (NOT_FOUND_STATUS) else (FOUND_STATUS),
message: if(payload.artist.bio.content==null) (NOT_FOUND_MESSAGE) else (FOUND_MESSAGE),
bioUrl: if(payload.artist.bio.content != null) (	payload.artist.bio.links.link.href)  else (NOT_FOUND_MESSAGE)

}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sps-logger:sps-logger doc:name="INFO END" doc:id="2a539852-1329-4518-8387-262e89356227" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-get-artist-info::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}"/>
	</sub-flow>
	<sub-flow name="sr-patch-artist" doc:id="66e96496-f341-4f89-b47f-6d7d35881812" >
		<sps-logger:sps-logger doc:name="INFO START" doc:id="e619bb26-2138-4a20-9627-31c1ceb6f5b2" config-ref="SPS_Logger_Config" eventName="START" message="#['sr-patch-artist::START:payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
		<set-variable value="#[vars.lastFmResponse.bioUrl]" doc:name="bioUrl" doc:id="a4e16b56-3265-432d-954c-4fd1e88d3a87" variableName="bioUrl"/>
		<sps-logger:sps-logger doc:name="bioUrl" doc:id="39ae2054-beee-444c-92ee-ea38a1def8c8" config-ref="SPS_Logger_Config" eventName="BEFORE REQUEST" level="DEBUG" message="#['sr-patch-artist::Update::payload:' ++ write(vars.bioUrl, 'application/json')]" category=" ${logcat}" />
		<db:update doc:name="Update Artist" doc:id="7218477b-ff20-4799-94d7-24a523126176" config-ref="mysql-connection">
			<db:sql ><![CDATA[UPDATE BC_ARTIST
  SET bio_url = :bioUrl
  WHERE group_nm = :groupName
]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	bioUrl: vars.bioUrl,
	groupName: vars.lastFmProperties.artist
}]]]></db:input-parameters>
		</db:update>
		<sps-logger:sps-logger doc:name="Updated artist" doc:id="6c50480f-5e38-4b76-87fd-01468784e8d5" config-ref="SPS_Logger_Config" eventName="AFTER REQUEST" level="DEBUG" message="#['sr-patch-artist::Update::UPDATE::payload:' ++ write(payload, 'application/json')]" statusCode="${logcat}"/>
		<set-payload value="#[%dw 2.0&#10;output application/json&#10;var FOUND_STATUS = p('http.get.status.ok')&#10;var FOUND_MESSAGE = p('http.get.message.ok')&#10;---&#10;{&#10;	statusCode: FOUND_STATUS,&#10;	message: FOUND_MESSAGE,&#10;	bioUrl: vars.bioUrl,&#10;	recordsUpdated: payload.affectedRows&#10;}]" doc:name="Set Payload" doc:id="11787251-e7a4-4946-b3b9-ff4e121c91ad" />
		<sps-logger:sps-logger doc:name="INFO END" doc:id="ea5cfeba-ae10-4136-bbf4-c3c65ab83543" config-ref="SPS_Logger_Config" eventName="END" message="#['sr-patch-artist::END::payload' ++ write(payload, &quot;application/json&quot;)]" category="${logcat}" />
	</sub-flow>
</mule>
